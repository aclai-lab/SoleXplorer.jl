name: CI
on:
  push:
    branches:
      - dev
    tags: ['*']
  pull_request:
  workflow_dispatch:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    permissions: # needed to allow julia-actions/cache to proactively delete old caches that it has created
      actions: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
          # - 'lts' broken: expects SolePostHoc to be registered
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v5
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
        env:
          PYTHON: ""

      # Pre-download artifacts with retry logic
      - name: Pre-download artifacts
        run: |
          julia -e '
          using Pkg
          try
              # Try to preload artifacts multiple times
              for attempt in 1:3
                  try
                      println("Attempt $attempt to download artifacts...")
                      Pkg.instantiate()
                      # Try to trigger artifact download
                      using SoleData
                      println("Artifacts downloaded successfully")
                      break
                  catch e
                      println("Attempt $attempt failed: $e")
                      if attempt == 3
                          println("All attempts failed, continuing with tests...")
                      else
                          sleep(5)
                      end
                  end
              end
          catch e
              println("Pre-download failed, but continuing: $e")
          end'
        continue-on-error: false
        
      - uses: julia-actions/julia-runtest@v1
        env:
          PYTHON: ""
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false